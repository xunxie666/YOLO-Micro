2023-04-04 16:49:46.126 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.84.bn (BatchNorm2d(39, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37], NumPruned=54]
[ <DEP: prune_batchnorm => prune_conv on model.84.conv (Conv2d(12, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 2, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37], NumPruned=2916]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.85.conv (Conv2d(39, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 2, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37], NumPruned=31104]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256, 295, 307, 331, 355])>, Index=[256, 258, 261, 262, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 293], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.88.conv (Conv2d(355, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[256, 258, 261, 262, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 293], NumPruned=6912]
40986 parameters will be pruned
-------------

2023-04-04 16:49:46.128 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.85.conv (Conv2d(12, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 9, 13, 14, 16, 17, 19, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 38, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 126, 127], NumPruned=9612]
[ <DEP: prune_conv => prune_batchnorm on model.85.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 9, 13, 14, 16, 17, 19, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 38, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 126, 127], NumPruned=178]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 9, 13, 14, 16, 17, 19, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 38, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.86.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 9, 13, 14, 16, 17, 19, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 38, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 126, 127], NumPruned=102528]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256, 268, 280, 304, 328])>, Index=[129, 131, 133, 134, 135, 137, 141, 142, 144, 145, 147, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.88.conv (Conv2d(328, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 137, 141, 142, 144, 145, 147, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 254, 255], NumPruned=22784]
135102 parameters will be pruned
-------------

2023-04-04 16:49:46.142 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.85.bn (BatchNorm2d(39, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38], NumPruned=54]
[ <DEP: prune_batchnorm => prune_conv on model.85.conv (Conv2d(12, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38], NumPruned=2916]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.86.conv (Conv2d(39, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38], NumPruned=31104]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 167, 179, 191, 215, 239])>, Index=[129, 132, 133, 134, 135, 136, 137, 139, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 163, 164, 165, 166], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.88.conv (Conv2d(239, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 132, 133, 134, 135, 136, 137, 139, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 163, 164, 165, 166], NumPruned=6912]
40986 parameters will be pruned
-------------

2023-04-04 16:49:46.142 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.86.conv (Conv2d(12, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 58, 59, 62, 65, 66, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 108, 109, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127], NumPruned=9612]
[ <DEP: prune_conv => prune_batchnorm on model.86.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 58, 59, 62, 65, 66, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 108, 109, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127], NumPruned=178]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 58, 59, 62, 65, 66, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 108, 109, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 140, 152, 164, 188, 212])>, Index=[0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 58, 59, 62, 65, 66, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 108, 109, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.88.conv (Conv2d(212, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 58, 59, 62, 65, 66, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 108, 109, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127], NumPruned=22784]
32574 parameters will be pruned
-------------

2023-04-04 16:49:46.158 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.86.bn (BatchNorm2d(39, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37], NumPruned=54]
[ <DEP: prune_batchnorm => prune_conv on model.86.conv (Conv2d(12, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37], NumPruned=2916]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 39, 51, 63, 75, 99, 123])>, Index=[0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.88.conv (Conv2d(123, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37], NumPruned=6912]
9882 parameters will be pruned
-------------

2023-04-04 16:49:46.159 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.88.conv (Conv2d(96, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=17184]
[ <DEP: prune_conv => prune_batchnorm on model.88.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.103.rbr_dense.0 (Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=824832]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.103.rbr_1x1.0 (Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=91648]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.91.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=45824]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.90.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 115, 116, 117, 118, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 253, 255], NumPruned=45824]
1025670 parameters will be pruned
-------------

2023-04-04 16:49:46.175 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.88.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=106]
[ <DEP: prune_batchnorm => prune_conv on model.88.conv (Conv2d(96, 77, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=5088]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.103.rbr_dense.0 (Conv2d(77, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=244224]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.103.rbr_1x1.0 (Conv2d(77, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=27136]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.91.conv (Conv2d(77, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=13568]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.90.conv (Conv2d(77, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], NumPruned=13568]
303690 parameters will be pruned
-------------

2023-04-04 16:49:46.177 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.90.conv (Conv2d(24, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 6, 9, 10, 12, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 61, 65, 66, 68, 70, 71, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 145, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 249, 250, 251, 253], NumPruned=4296]
[ <DEP: prune_conv => prune_batchnorm on model.90.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 6, 9, 10, 12, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 61, 65, 66, 68, 70, 71, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 145, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 249, 250, 251, 253], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 6, 9, 10, 12, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 61, 65, 66, 68, 70, 71, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 145, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 249, 250, 251, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 1024])>, Index=[256, 257, 258, 259, 260, 262, 265, 266, 268, 272, 274, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 291, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 317, 321, 322, 324, 326, 327, 328, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 401, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 429, 433, 434, 435, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 486, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 506, 507, 509], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.95.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[256, 257, 258, 259, 260, 262, 265, 266, 268, 272, 274, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 291, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 317, 321, 322, 324, 326, 327, 328, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 401, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 429, 433, 434, 435, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 486, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 506, 507, 509], NumPruned=91648]
[ <DEP: _prune_concat => prune_related_conv on model.94.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[256, 257, 258, 259, 260, 262, 265, 266, 268, 272, 274, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 291, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 317, 321, 322, 324, 326, 327, 328, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 401, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 429, 433, 434, 435, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 486, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 506, 507, 509], NumPruned=91648]
187950 parameters will be pruned
-------------

2023-04-04 16:49:46.191 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.90.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 60, 61, 62, 64, 66, 68, 69, 70, 71, 73, 74, 76], NumPruned=106]
[ <DEP: prune_batchnorm => prune_conv on model.90.conv (Conv2d(24, 77, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 60, 61, 62, 64, 66, 68, 69, 70, 71, 73, 74, 76], NumPruned=1272]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 60, 61, 62, 64, 66, 68, 69, 70, 71, 73, 74, 76], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 333, 845])>, Index=[257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 284, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 316, 317, 318, 320, 322, 324, 325, 326, 327, 329, 330, 332], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.95.conv (Conv2d(845, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 284, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 316, 317, 318, 320, 322, 324, 325, 326, 327, 329, 330, 332], NumPruned=27136]
[ <DEP: _prune_concat => prune_related_conv on model.94.conv (Conv2d(845, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 284, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 316, 317, 318, 320, 322, 324, 325, 326, 327, 329, 330, 332], NumPruned=27136]
55650 parameters will be pruned
-------------

2023-04-04 16:49:46.194 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.91.conv (Conv2d(24, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 19, 21, 24, 25, 26, 29, 30, 31, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 118, 119, 120, 121, 122, 125, 127, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 250, 251, 252, 254, 255], NumPruned=4296]
[ <DEP: prune_conv => prune_batchnorm on model.91.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 19, 21, 24, 25, 26, 29, 30, 31, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 118, 119, 120, 121, 122, 125, 127, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 250, 251, 252, 254, 255], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 19, 21, 24, 25, 26, 29, 30, 31, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 118, 119, 120, 121, 122, 125, 127, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 250, 251, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.92.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 8, 11, 15, 16, 17, 18, 19, 21, 24, 25, 26, 29, 30, 31, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 118, 119, 120, 121, 122, 125, 127, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 250, 251, 252, 254, 255], NumPruned=412416]
417070 parameters will be pruned
-------------

2023-04-04 16:49:46.205 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.91.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 60, 64, 66, 67, 68, 70, 71, 73, 74, 76], NumPruned=106]
[ <DEP: prune_batchnorm => prune_conv on model.91.conv (Conv2d(24, 77, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 60, 64, 66, 67, 68, 70, 71, 73, 74, 76], NumPruned=1272]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 60, 64, 66, 67, 68, 70, 71, 73, 74, 76], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.92.conv (Conv2d(77, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 60, 64, 66, 67, 68, 70, 71, 73, 74, 76], NumPruned=122112]
123490 parameters will be pruned
-------------

2023-04-04 16:49:46.207 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.92.conv (Conv2d(24, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 111, 112, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 242, 243, 244, 247, 248, 251, 253, 254, 255], NumPruned=38664]
[ <DEP: prune_conv => prune_batchnorm on model.92.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 111, 112, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 242, 243, 244, 247, 248, 251, 253, 254, 255], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 111, 112, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 242, 243, 244, 247, 248, 251, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 280, 792])>, Index=[0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 111, 112, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 242, 243, 244, 247, 248, 251, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.95.conv (Conv2d(792, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 111, 112, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 242, 243, 244, 247, 248, 251, 253, 254, 255], NumPruned=91648]
[ <DEP: _prune_concat => prune_related_conv on model.94.conv (Conv2d(792, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 111, 112, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 240, 242, 243, 244, 247, 248, 251, 253, 254, 255], NumPruned=91648]
222318 parameters will be pruned
-------------

2023-04-04 16:49:46.222 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.92.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75], NumPruned=106]
[ <DEP: prune_batchnorm => prune_conv on model.92.conv (Conv2d(24, 77, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75], NumPruned=11448]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 77, 101, 613])>, Index=[1, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.95.conv (Conv2d(613, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75], NumPruned=27136]
[ <DEP: _prune_concat => prune_related_conv on model.94.conv (Conv2d(613, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75], NumPruned=27136]
65826 parameters will be pruned
-------------

2023-04-04 16:49:46.225 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.94.conv (Conv2d(560, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 32, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 78, 79, 81, 84, 85, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 172, 173, 175, 178, 179, 180, 182, 185, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 213, 214, 215, 219, 220, 221, 223, 225, 226, 227, 228, 230, 231, 232, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 258, 259, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 332, 336, 339, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 354, 355, 357, 358, 360, 364, 366, 367, 369, 370, 372, 373, 374, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 464, 467, 468, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 496, 498, 499, 500, 501, 503, 504, 506, 507, 509], NumPruned=200480]
[ <DEP: prune_conv => prune_batchnorm on model.94.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 32, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 78, 79, 81, 84, 85, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 172, 173, 175, 178, 179, 180, 182, 185, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 213, 214, 215, 219, 220, 221, 223, 225, 226, 227, 228, 230, 231, 232, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 258, 259, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 332, 336, 339, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 354, 355, 357, 358, 360, 364, 366, 367, 369, 370, 372, 373, 374, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 464, 467, 468, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 496, 498, 499, 500, 501, 503, 504, 506, 507, 509], NumPruned=716]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 32, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 78, 79, 81, 84, 85, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 172, 173, 175, 178, 179, 180, 182, 185, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 213, 214, 215, 219, 220, 221, 223, 225, 226, 227, 228, 230, 231, 232, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 258, 259, 261, 262, 263, 264, 265, 267, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 332, 336, 339, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 354, 355, 357, 358, 360, 364, 366, 367, 369, 370, 372, 373, 374, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 464, 467, 468, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 496, 498, 499, 500, 501, 503, 504, 506, 507, 509], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024, 1536, 2048])>, Index=[1536, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1563, 1564, 1566, 1568, 1571, 1573, 1574, 1576, 1577, 1578, 1580, 1581, 1582, 1583, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1604, 1605, 1607, 1608, 1609, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1624, 1625, 1626, 1628, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1668, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1693, 1694, 1695, 1696, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1709, 1711, 1714, 1715, 1716, 1718, 1721, 1724, 1725, 1727, 1728, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1749, 1750, 1751, 1755, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1788, 1791, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1808, 1809, 1810, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1859, 1860, 1861, 1863, 1864, 1865, 1868, 1872, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1896, 1900, 1902, 1903, 1905, 1906, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1972, 1973, 1974, 1975, 1979, 1980, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2000, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2032, 2034, 2035, 2036, 2037, 2039, 2040, 2042, 2043, 2045], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1536, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1563, 1564, 1566, 1568, 1571, 1573, 1574, 1576, 1577, 1578, 1580, 1581, 1582, 1583, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1604, 1605, 1607, 1608, 1609, 1611, 1612, 1614, 1615, 1617, 1620, 1621, 1624, 1625, 1626, 1628, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1668, 1670, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1693, 1694, 1695, 1696, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1709, 1711, 1714, 1715, 1716, 1718, 1721, 1724, 1725, 1727, 1728, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1749, 1750, 1751, 1755, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1788, 1791, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1808, 1809, 1810, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1859, 1860, 1861, 1863, 1864, 1865, 1868, 1872, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1896, 1900, 1902, 1903, 1905, 1906, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1972, 1973, 1974, 1975, 1979, 1980, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 2000, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2027, 2028, 2032, 2034, 2035, 2036, 2037, 2039, 2040, 2042, 2043, 2045], NumPruned=183296]
384492 parameters will be pruned
-------------

2023-04-04 16:49:46.239 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.94.bn (BatchNorm2d(154, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 65, 66, 70, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 109, 111, 112, 114, 116, 117, 119, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 152, 153], NumPruned=216]
[ <DEP: prune_batchnorm => prune_conv on model.94.conv (Conv2d(560, 154, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 65, 66, 70, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 109, 111, 112, 114, 116, 117, 119, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 152, 153], NumPruned=60480]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 65, 66, 70, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 109, 111, 112, 114, 116, 117, 119, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 152, 153], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024, 1536, 1690])>, Index=[1536, 1537, 1538, 1539, 1541, 1542, 1543, 1545, 1546, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1597, 1598, 1599, 1601, 1602, 1606, 1609, 1611, 1612, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1626, 1627, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1639, 1641, 1642, 1643, 1645, 1647, 1648, 1650, 1652, 1653, 1655, 1658, 1659, 1660, 1662, 1663, 1664, 1666, 1667, 1669, 1670, 1671, 1674, 1675, 1676, 1678, 1680, 1681, 1682, 1683, 1685, 1686, 1688, 1689], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(1690, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1536, 1537, 1538, 1539, 1541, 1542, 1543, 1545, 1546, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1597, 1598, 1599, 1601, 1602, 1606, 1609, 1611, 1612, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1626, 1627, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1639, 1641, 1642, 1643, 1645, 1647, 1648, 1650, 1652, 1653, 1655, 1658, 1659, 1660, 1662, 1663, 1664, 1666, 1667, 1669, 1670, 1671, 1674, 1675, 1676, 1678, 1680, 1681, 1682, 1683, 1685, 1686, 1688, 1689], NumPruned=55296]
115992 parameters will be pruned
-------------

2023-04-04 16:49:46.242 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.95.conv (Conv2d(560, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123, 124, 126, 129, 132, 133, 134, 136, 140, 141, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 176, 179, 180, 181, 182, 183, 185, 186, 191, 193, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 252, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 273, 275, 276, 278, 281, 282, 283, 284, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 389, 390, 391, 392, 393, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 423, 425, 426, 427, 429, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 446, 447, 448, 449, 451, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 493, 494, 496, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511], NumPruned=200480]
[ <DEP: prune_conv => prune_batchnorm on model.95.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123, 124, 126, 129, 132, 133, 134, 136, 140, 141, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 176, 179, 180, 181, 182, 183, 185, 186, 191, 193, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 252, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 273, 275, 276, 278, 281, 282, 283, 284, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 389, 390, 391, 392, 393, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 423, 425, 426, 427, 429, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 446, 447, 448, 449, 451, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 493, 494, 496, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511], NumPruned=716]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123, 124, 126, 129, 132, 133, 134, 136, 140, 141, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 176, 179, 180, 181, 182, 183, 185, 186, 191, 193, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 252, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 273, 275, 276, 278, 281, 282, 283, 284, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 389, 390, 391, 392, 393, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 423, 425, 426, 427, 429, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 446, 447, 448, 449, 451, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 493, 494, 496, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.96.conv (Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123, 124, 126, 129, 132, 133, 134, 136, 140, 141, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 176, 179, 180, 181, 182, 183, 185, 186, 191, 193, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 252, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 273, 275, 276, 278, 281, 282, 283, 284, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 389, 390, 391, 392, 393, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 423, 425, 426, 427, 429, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 446, 447, 448, 449, 451, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 493, 494, 496, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511], NumPruned=824832]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024, 1536, 1582])>, Index=[1024, 1025, 1026, 1027, 1028, 1030, 1032, 1033, 1035, 1036, 1037, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1100, 1101, 1102, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1144, 1145, 1147, 1148, 1150, 1153, 1156, 1157, 1158, 1160, 1164, 1165, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1195, 1200, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1215, 1217, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1237, 1238, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1253, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1271, 1274, 1276, 1278, 1279, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1297, 1299, 1300, 1302, 1305, 1306, 1307, 1308, 1313, 1314, 1315, 1316, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1380, 1382, 1384, 1385, 1386, 1387, 1388, 1392, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1421, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1442, 1443, 1445, 1446, 1447, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1465, 1466, 1467, 1470, 1471, 1472, 1473, 1475, 1476, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1517, 1518, 1520, 1522, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(1582, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1024, 1025, 1026, 1027, 1028, 1030, 1032, 1033, 1035, 1036, 1037, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1100, 1101, 1102, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1144, 1145, 1147, 1148, 1150, 1153, 1156, 1157, 1158, 1160, 1164, 1165, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1195, 1200, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1215, 1217, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1237, 1238, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1253, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1271, 1274, 1276, 1278, 1279, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1297, 1299, 1300, 1302, 1305, 1306, 1307, 1308, 1313, 1314, 1315, 1316, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1380, 1382, 1384, 1385, 1386, 1387, 1388, 1392, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1421, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1442, 1443, 1445, 1446, 1447, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1465, 1466, 1467, 1470, 1471, 1472, 1473, 1475, 1476, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1517, 1518, 1520, 1522, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535], NumPruned=183296]
1209324 parameters will be pruned
-------------

2023-04-04 16:49:46.256 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.95.bn (BatchNorm2d(154, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 128, 130, 132, 134, 135, 138, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152], NumPruned=214]
[ <DEP: prune_batchnorm => prune_conv on model.95.conv (Conv2d(560, 154, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 128, 130, 132, 134, 135, 138, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152], NumPruned=59920]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 128, 130, 132, 134, 135, 138, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.96.conv (Conv2d(154, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 2, 3, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 128, 130, 132, 134, 135, 138, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152], NumPruned=246528]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024, 1178, 1224])>, Index=[1025, 1026, 1027, 1030, 1031, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1072, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1092, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1124, 1127, 1128, 1129, 1130, 1131, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1152, 1154, 1156, 1158, 1159, 1162, 1163, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(1224, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1025, 1026, 1027, 1030, 1031, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1072, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1092, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1124, 1127, 1128, 1129, 1130, 1131, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1152, 1154, 1156, 1158, 1159, 1162, 1163, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176], NumPruned=54784]
361446 parameters will be pruned
-------------

2023-04-04 16:49:46.271 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.96.conv (Conv2d(47, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 2, 6, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 80, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 239, 240, 241, 245, 246, 247, 248, 249, 251, 254, 255], NumPruned=75717]
[ <DEP: prune_conv => prune_batchnorm on model.96.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 6, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 80, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 239, 240, 241, 245, 246, 247, 248, 249, 251, 254, 255], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 6, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 80, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 239, 240, 241, 245, 246, 247, 248, 249, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.97.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 2, 6, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 80, 81, 82, 83, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 239, 240, 241, 245, 246, 247, 248, 249, 251, 254, 255], NumPruned=412416]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024, 1071, 1117])>, Index=[768, 770, 774, 775, 776, 778, 779, 782, 784, 785, 786, 788, 789, 790, 791, 797, 798, 800, 801, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 815, 818, 819, 820, 821, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 848, 849, 850, 851, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 869, 870, 871, 872, 873, 874, 875, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 913, 914, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 944, 947, 948, 949, 953, 954, 955, 956, 957, 958, 959, 960, 962, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 986, 989, 991, 992, 993, 996, 997, 999, 1000, 1001, 1004, 1005, 1007, 1008, 1009, 1013, 1014, 1015, 1016, 1017, 1019, 1022, 1023], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(1117, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[768, 770, 774, 775, 776, 778, 779, 782, 784, 785, 786, 788, 789, 790, 791, 797, 798, 800, 801, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 814, 815, 818, 819, 820, 821, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 848, 849, 850, 851, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 869, 870, 871, 872, 873, 874, 875, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 913, 914, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 944, 947, 948, 949, 953, 954, 955, 956, 957, 958, 959, 960, 962, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 986, 989, 991, 992, 993, 996, 997, 999, 1000, 1001, 1004, 1005, 1007, 1008, 1009, 1013, 1014, 1015, 1016, 1017, 1019, 1022, 1023], NumPruned=91648]
580139 parameters will be pruned
-------------

2023-04-04 16:49:46.287 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.96.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 57, 60, 62, 63, 64, 66, 67, 69, 71, 73, 75, 76], NumPruned=106]
[ <DEP: prune_batchnorm => prune_conv on model.96.conv (Conv2d(47, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 57, 60, 62, 63, 64, 66, 67, 69, 71, 73, 75, 76], NumPruned=22419]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 57, 60, 62, 63, 64, 66, 67, 69, 71, 73, 75, 76], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.97.conv (Conv2d(77, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 57, 60, 62, 63, 64, 66, 67, 69, 71, 73, 75, 76], NumPruned=122112]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 845, 892, 938])>, Index=[769, 770, 771, 772, 773, 775, 776, 777, 779, 780, 782, 783, 784, 787, 789, 790, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 811, 813, 814, 815, 816, 817, 818, 819, 820, 825, 828, 830, 831, 832, 834, 835, 837, 839, 841, 843, 844], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(938, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[769, 770, 771, 772, 773, 775, 776, 777, 779, 780, 782, 783, 784, 787, 789, 790, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 811, 813, 814, 815, 816, 817, 818, 819, 820, 825, 828, 830, 831, 832, 834, 835, 837, 839, 841, 843, 844], NumPruned=27136]
171773 parameters will be pruned
-------------

2023-04-04 16:49:46.289 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.97.conv (Conv2d(24, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 43, 44, 46, 47, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 102, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 129, 131, 133, 135, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 228, 230, 231, 233, 235, 236, 237, 238, 240, 241, 244, 245, 248, 249, 250, 251, 253], NumPruned=38664]
[ <DEP: prune_conv => prune_batchnorm on model.97.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 4, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 43, 44, 46, 47, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 102, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 129, 131, 133, 135, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 228, 230, 231, 233, 235, 236, 237, 238, 240, 241, 244, 245, 248, 249, 250, 251, 253], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 4, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 43, 44, 46, 47, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 102, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 129, 131, 133, 135, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 228, 230, 231, 233, 235, 236, 237, 238, 240, 241, 244, 245, 248, 249, 250, 251, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.98.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 43, 44, 46, 47, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 102, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 129, 131, 133, 135, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 228, 230, 231, 233, 235, 236, 237, 238, 240, 241, 244, 245, 248, 249, 250, 251, 253], NumPruned=412416]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 792, 839, 885])>, Index=[512, 513, 514, 516, 518, 519, 521, 522, 524, 526, 527, 529, 530, 531, 534, 535, 536, 540, 541, 542, 543, 545, 546, 547, 549, 551, 552, 553, 555, 556, 558, 559, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 577, 580, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 595, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 635, 637, 638, 640, 641, 643, 645, 647, 648, 649, 652, 653, 654, 656, 657, 659, 660, 661, 662, 664, 665, 666, 669, 671, 672, 673, 674, 675, 676, 678, 679, 681, 682, 683, 684, 685, 687, 688, 689, 691, 692, 693, 694, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 730, 731, 732, 733, 734, 735, 738, 740, 742, 743, 745, 747, 748, 749, 750, 752, 753, 756, 757, 760, 761, 762, 763, 765], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(885, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[512, 513, 514, 516, 518, 519, 521, 522, 524, 526, 527, 529, 530, 531, 534, 535, 536, 540, 541, 542, 543, 545, 546, 547, 549, 551, 552, 553, 555, 556, 558, 559, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 577, 580, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 595, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 635, 637, 638, 640, 641, 643, 645, 647, 648, 649, 652, 653, 654, 656, 657, 659, 660, 661, 662, 664, 665, 666, 669, 671, 672, 673, 674, 675, 676, 678, 679, 681, 682, 683, 684, 685, 687, 688, 689, 691, 692, 693, 694, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 730, 731, 732, 733, 734, 735, 738, 740, 742, 743, 745, 747, 748, 749, 750, 752, 753, 756, 757, 760, 761, 762, 763, 765], NumPruned=91648]
543086 parameters will be pruned
-------------

2023-04-04 16:49:46.302 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.97.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 35, 37, 39, 40, 41, 42, 47, 48, 49, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75], NumPruned=106]
[ <DEP: prune_batchnorm => prune_conv on model.97.conv (Conv2d(24, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 35, 37, 39, 40, 41, 42, 47, 48, 49, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75], NumPruned=11448]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 35, 37, 39, 40, 41, 42, 47, 48, 49, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.98.conv (Conv2d(77, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 35, 37, 39, 40, 41, 42, 47, 48, 49, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75], NumPruned=122112]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 589, 613, 660, 706])>, Index=[512, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 542, 544, 547, 549, 551, 552, 553, 554, 559, 560, 561, 563, 564, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 587], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(706, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[512, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 542, 544, 547, 549, 551, 552, 553, 554, 559, 560, 561, 563, 564, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 587], NumPruned=27136]
160802 parameters will be pruned
-------------

2023-04-04 16:49:46.304 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.98.conv (Conv2d(24, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 76, 77, 79, 83, 84, 85, 86, 88, 89, 91, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 206, 207, 210, 211, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 252, 253, 254], NumPruned=38664]
[ <DEP: prune_conv => prune_batchnorm on model.98.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 76, 77, 79, 83, 84, 85, 86, 88, 89, 91, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 206, 207, 210, 211, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 252, 253, 254], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 76, 77, 79, 83, 84, 85, 86, 88, 89, 91, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 206, 207, 210, 211, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 252, 253, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.99.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 38, 39, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 76, 77, 79, 83, 84, 85, 86, 88, 89, 91, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 206, 207, 210, 211, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 252, 253, 254], NumPruned=412416]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 536, 560, 607, 653])>, Index=[257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 292, 294, 295, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 332, 333, 335, 339, 340, 341, 342, 344, 345, 347, 350, 351, 354, 355, 357, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 422, 423, 424, 425, 426, 427, 429, 430, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 459, 462, 463, 466, 467, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 502, 503, 504, 505, 506, 508, 509, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(653, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 292, 294, 295, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 332, 333, 335, 339, 340, 341, 342, 344, 345, 347, 350, 351, 354, 355, 357, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 422, 423, 424, 425, 426, 427, 429, 430, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 459, 462, 463, 466, 467, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 502, 503, 504, 505, 506, 508, 509, 510], NumPruned=91648]
543086 parameters will be pruned
-------------

2023-04-04 16:49:46.318 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.98.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 19, 21, 25, 26, 28, 29, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74], NumPruned=106]
[ <DEP: prune_batchnorm => prune_conv on model.98.conv (Conv2d(24, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 19, 21, 25, 26, 28, 29, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74], NumPruned=11448]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 19, 21, 25, 26, 28, 29, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.99.conv (Conv2d(77, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 19, 21, 25, 26, 28, 29, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74], NumPruned=122112]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 333, 357, 381, 428, 474])>, Index=[256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273, 275, 277, 281, 282, 284, 285, 287, 288, 290, 293, 295, 296, 297, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 316, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(474, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273, 275, 277, 281, 282, 284, 285, 287, 288, 290, 293, 295, 296, 297, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 316, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330], NumPruned=27136]
160802 parameters will be pruned
-------------

2023-04-04 16:49:46.320 | INFO     | __main__:layer_pruning:73 - 
-------------
[ <DEP: prune_conv => prune_conv on model.99.conv (Conv2d(24, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 143, 145, 146, 147, 149, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 250, 251, 252, 254], NumPruned=38664]
[ <DEP: prune_conv => prune_batchnorm on model.99.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 143, 145, 146, 147, 149, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 250, 251, 252, 254], NumPruned=358]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 143, 145, 146, 147, 149, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 250, 251, 252, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 280, 304, 328, 375, 421])>, Index=[0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 143, 145, 146, 147, 149, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 250, 251, 252, 254], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(421, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 143, 145, 146, 147, 149, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 190, 191, 193, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 250, 251, 252, 254], NumPruned=91648]
130670 parameters will be pruned
-------------

2023-04-04 16:49:46.333 | INFO     | __main__:layer_pruning:79 - 
-------------
[ <DEP: prune_batchnorm => prune_batchnorm on model.99.bn (BatchNorm2d(77, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 73, 75], NumPruned=108]
[ <DEP: prune_batchnorm => prune_conv on model.99.conv (Conv2d(24, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 73, 75], NumPruned=11664]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 73, 75], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 77, 101, 125, 149, 196, 242])>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 73, 75], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.101.conv (Conv2d(242, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 73, 75], NumPruned=27648]
39420 parameters will be pruned
-------------

2023-04-04 16:49:46.334 | INFO     | __main__:layer_pruning:84 -   Params: 37299042 => 12536449

2023-04-04 16:49:46.451 | INFO     | __main__:layer_pruning:95 - 剪枝完成

